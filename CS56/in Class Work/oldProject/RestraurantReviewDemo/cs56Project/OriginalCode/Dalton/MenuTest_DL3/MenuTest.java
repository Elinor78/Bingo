import java.awt.*;import java.awt.event.*;import javax.swing.*;import java.sql.*;public class MenuTest extends JFrame {	// private Connection connection;	private Statement statement;	static final String JDBC_DRIVER = "";	static final String DATABASE_URL = "";	// set up GUI	public MenuTest() {		super("Using JMenus");		/*		try {			// specify location of database on filesystem			System.setProperty("db2j.system.home", "C:/Cloudscape_5.0");			// load database driver class			Class.forName(JDBC_DRIVER);			// establish connection to database			connection = DriverManager.getConnection(DATABASE_URL);			// create Statement for querying database			statement = connection.createStatement();			// detect problems interacting with the database		} catch (SQLException sqlException) {			JOptionPane.showMessageDialog(null, sqlException.getMessage(),					"Database Error", JOptionPane.ERROR_MESSAGE);			System.exit(1);		} catch (ClassNotFoundException classNotFound) {			JOptionPane.showMessageDialog(null, classNotFound.getMessage(),					"Driver Not Found", JOptionPane.ERROR_MESSAGE);			System.exit(1);		}		*/				// set up File menu and its menu items		JMenu fileMenu = new JMenu("File");		fileMenu.setMnemonic('F');		// set up About... menu item		JMenuItem addReviewItem = new JMenuItem("Add a review");		addReviewItem.setMnemonic('A');		fileMenu.add(addReviewItem);		addReviewItem.addActionListener(		new ActionListener() {			// display message dialog when user selects About...			public void actionPerformed(ActionEvent event) {				JOptionPane.showMessageDialog(MenuTest.this,						"This is an example\nof using menus", "About",						JOptionPane.PLAIN_MESSAGE);			}		} );		// set up search... menu item		JMenuItem searchRestaurantItem = new JMenuItem(				"Search for a restaurant");		searchRestaurantItem.setMnemonic('S');		searchRestaurantItem.setEnabled(false);		fileMenu.add(searchRestaurantItem);		searchRestaurantItem.addActionListener(		new ActionListener() {			// display message dialog when user selects About...			public void actionPerformed(ActionEvent event) {				JOptionPane.showMessageDialog(MenuTest.this,						"This is an example\nof using menus", "About",						JOptionPane.PLAIN_MESSAGE);			}		} );		// set up Exit menu item		JMenuItem exitItem = new JMenuItem("Exit");		exitItem.setMnemonic('x');		fileMenu.add(exitItem);		exitItem.addActionListener(		new ActionListener() {			// terminate application when user clicks exitItem			public void actionPerformed(ActionEvent event) {				System.exit(0);			}		} );		// create menu bar and attach it to MenuTest window		JMenuBar bar = new JMenuBar();		setJMenuBar(bar);		bar.add(fileMenu);		JMenu aboutMenu = new JMenu("About...");		aboutMenu.setMnemonic('A');		JMenuItem programItem = new JMenuItem("Restaurant Review");		aboutMenu.add(programItem);		programItem.addActionListener(new ActionListener() {			// display message dialog when user selects About...			public void actionPerformed(ActionEvent event) {				JOptionPane.showMessageDialog(MenuTest.this,						"This is a Restaurant Review Program", "About",						JOptionPane.PLAIN_MESSAGE);			}		} );				bar.add(aboutMenu);		// set up label to display text        		JButton jb = new JButton("Search");		jb.addActionListener(new SearchHandler());		// nr.setVisible(false);		// ns.setVisible(true);        TasksTab tt = new TasksTab();		tt.setVisible(true);		// getContentPane().add( ns, BorderLayout.CENTER );		getContentPane().add(tt, BorderLayout.WEST);		getContentPane().add(jb, BorderLayout.SOUTH);		// getContentPane().add( nr, BorderLayout.CENTER );		setSize(800, 500);		setVisible(true);	} // end constructor	public static void main(String args[]) {		MenuTest application = new MenuTest();		application.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);	}/*	// inner class to handle action events from menu items	private class ItemHandler implements ActionListener {		// process color and font selections		public void actionPerformed(ActionEvent event) {			// process color selection			repaint();		} // end method actionPerformed	} // end class ItemHandler	// inner class to handle item events from check box menu items	private class StyleHandler implements ItemListener {		// process font style selections		public void itemStateChanged(ItemEvent e) {			repaint();		}	} // end class StyleHandler*/	private class SearchHandler implements ActionListener {		public void actionPerformed(ActionEvent e) {			try {				@SuppressWarnings("unused")				ResultSet rs = statement						.executeQuery("SELECT * FROM restaurants");			} catch (SQLException sqlException) {				JOptionPane.showMessageDialog(null, sqlException.getMessage(),						"Database Error", JOptionPane.ERROR_MESSAGE);				System.exit(1);			}		}	}	} // end class MenuTest